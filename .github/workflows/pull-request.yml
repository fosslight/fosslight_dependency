# Running tests with tox for releasing new version

name: Pull requests fosslight_dependency_scanner

on:
  pull_request:
    branches:
      - '*'

jobs:
  check-commit-message:
    name: Check Commit Message
    runs-on: ubuntu-latest
    steps:
      - name: Get PR Commits
        id: 'get-pr-commits'
        uses: tim-actions/get-pr-commits@master
        with:
          token: ${{ secrets.TOKEN }}

      - name: Check Subject Line Length
        uses: tim-actions/commit-message-checker-with-regex@v0.3.1
        with:
          commits: ${{ steps.get-pr-commits.outputs.commits }}
          pattern: '^.{0,50}(\n.*)*$'
          error: 'Subject too long (max 50)'
      - name: Check Body Line Length
        if: ${{ success() || failure() }}
        uses: tim-actions/commit-message-checker-with-regex@v0.3.1
        with:
          commits: ${{ steps.get-pr-commits.outputs.commits }}
          pattern: '^.+(\n.{0,72})*$'
          error: 'Body line too long (max 72)'
  build_ubuntu:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox
        pip install tox-wheel
        sudo npm install -g license-checker
    - name: Run Tox
      run: |
        tox -e run_ubuntu
  build_windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox
        pip install tox-wheel
    - name: Run Tox
      run: |
        tox -e run_windows
  build_macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies 
      run: |
        python -m pip install --upgrade pip
        pip install .
        sudo npm install -g license-checker      
    - name: Install Pod
      working-directory: ./tests/test_cocoapods/cocoapods-tips/JWSCocoapodsTips
      run: pod install --clean-install
    - name: Run Test
      run: |
        fosslight_dependency -p tests/test_pypi -o tests/result/pypi
        fosslight_dependency -p tests/test_npm1 -o tests/result/npm1
        fosslight_dependency -p tests/test_npm2 -o tests/result/npm2 -m npm
        fosslight_dependency -p tests/test_maven1/lombok.maven -o tests/result/maven1
        fosslight_dependency -p tests/test_maven2 -o tests/result/maven2
        fosslight_dependency -p tests/test_gradle/jib -o tests/result/gradle
        fosslight_dependency -p tests/test_pub -o tests/result/pub
        fosslight_dependency -p tests/test_cocoapods/cocoapods-tips/JWSCocoapodsTips -o tests/result/Cocoapods
        fosslight_dependency -p tests/test_swift -o tests/result/swift -t ${{ secrets.TOKEN }}
        fosslight_dependency -p tests/test_swift2 -o tests/result/swift2 -t ${{ secrets.TOKEN }}
        fosslight_dependency -p tests/test_carthage -o tests/result/carthage -t ${{ secrets.TOKEN }}
  reuse:
    runs-on: ubuntu-latest
    steps: 
    - uses: actions/checkout@v2
    - name: REUSE Compliance Check
      uses: fsfe/reuse-action@v1
